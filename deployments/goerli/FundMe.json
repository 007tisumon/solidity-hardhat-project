{
  "address": "0xbFf1e27ea65a17303cD64AD96B70177fB3e1ab88",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "fundingAddress",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumUSD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x3caf9a41c2adaca0f20cc28b1202573f866735bcf1fd37587ca6f40f4028eff4",
  "receipt": {
    "to": null,
    "from": "0xCA66c7e2B1649cA0c49b33f0f6204CBb101D7Ec8",
    "contractAddress": "0xbFf1e27ea65a17303cD64AD96B70177fB3e1ab88",
    "transactionIndex": 33,
    "gasUsed": "802308",
    "logsBloom": "0x
    "blockHash": "0x6ac6f4d353d8a8ebd25b2576f64be0412883633815ad80d7c098ed26350b7ba9",
    "transactionHash": "0x3caf9a41c2adaca0f20cc28b1202573f866735bcf1fd37587ca6f40f4028eff4",
    "logs": [],
    "blockNumber": 8394009,
    "cumulativeGasUsed": "8096410",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"
  ],
  "numDeployments": 2,
  "solcInputHash": "7da12e324396da6a9865ffe3b761aa47",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundingAddress\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"DEV Sumon\",\"details\":\"this implements price feeds our library\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"this contract is demo a simple funding contract \",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.8;\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\n/**\\n * @title A contract for crowd funding\\n * @author DEV Sumon\\n * @notice this contract is demo a simple funding contract \\n * @dev this implements price feeds our library\\n*/\\n\\ncontract FundMe {\\n    using PriceConverter for uint;\\n    // 0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419\\n    //storage variabele\\n    uint public constant minimumUSD = 50 * 10 ** 18;\\n    address private immutable owner;\\n\\n    // event Funded(address indexed from, uint amount);\\n\\n    address[] private fundersArray;\\n    mapping(address => uint) private addressToAmount;\\n   \\n    AggregatorV3Interface private priceFeed;\\n\\n    modifier onlyOwner() {\\n        if (msg.sender != owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    constructor(address priceFeedAddress) {\\n        owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    // receive() external payable {\\n    //     fund();\\n    // }\\n\\n    // fallback() external payable {\\n    //     fund();\\n    // }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(priceFeed) >= minimumUSD,\\n            \\\"Eth not enough to send\\\"\\n        ); // 1e18 = 1 * 10 ** 18 = 1000000000000000000 wei\\n        addressToAmount[msg.sender] += msg.value;\\n        fundersArray.push(msg.sender);\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint funderIndex = 0;\\n            funderIndex > fundersArray.length;\\n            funderIndex++\\n        ) {\\n            address funder = fundersArray[funderIndex];\\n            addressToAmount[funder] = 0;\\n        }\\n        fundersArray = new address[](0);\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess);\\n    }\\n    // function cheaperWithdraw() public onlyOwner {\\n    //     address[] memory funders = funders;\\n    //     // mappings can't be in memory, sorry!\\n    //     for (\\n    //         uint256 funderIndex = 0;\\n    //         funderIndex < funders.length;\\n    //         funderIndex++\\n    //     ) {\\n    //         address funder = funders[funderIndex];\\n    //         addressToAmount[funder] = 0;\\n    //     }\\n    //     funders = new address[](0);\\n    //     // payable(msg.sender).transfer(address(this).balance);\\n    //     (bool success, ) = owner.call{value: address(this).balance}(\\\"\\\");\\n    //     require(success);\\n    // }\\n\\n    // public view pure funtion declearation\\n    function getAddressToAmountFunded(address fundingAddress) public view returns(uint){\\n        return addressToAmount[fundingAddress];\\n    }\\n    function getFunder(uint index) public view returns(address){\\n        return fundersArray[index];\\n    }\\n    function getOwner() public view returns(address){\\n        return owner;\\n    }\\n    function getPriceFeed() public view returns(AggregatorV3Interface){\\n        return priceFeed;\\n    }\\n\\n\\n}\\n\",\"keccak256\":\"0xe51ad29ecdcc47b1bde8789119dc7687a65ba21dfb7c9a84b254bdb73c740556\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.7;\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    // gorerli 0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419\\n        function getPrice(AggregatorV3Interface priceFeed) internal view returns(uint) {\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(priceFeed);\\n        (/* uint80 roundID */,\\n            int price,\\n            /*uint startedAt*/,\\n            /*uint timeStamp*/,\\n            /*uint80 answeredInRound*/) = priceFeed.latestRoundData();\\n        return uint(price * 1e10);\\n    }\\n    // function getVersion() internal view returns(uint) {\\n    //     AggregatorV3Interface priceFeed = AggregatorV3Interface(0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419);\\n    //     return priceFeed.version();\\n    // }\\n    function getConversionRate(uint ethAmount,AggregatorV3Interface priceFeed) internal view returns(uint) {\\n        uint ethPrice = getPrice(priceFeed);\\n        uint ethAmountUsd = (ethPrice * ethAmount) / 1e18 ;\\n        return ethAmountUsd;\\n    }\\n}\",\"keccak256\":\"0xfa1d2caa513496f6adf1474b0f14cac34c6f225ae59dc57288c8cd33c5480d8d\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610e7d380380610e7d83398181016040528101906100329190610110565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061013d565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100dd826100b2565b9050919050565b6100ed816100d2565b81146100f857600080fd5b50565b60008151905061010a816100e4565b92915050565b600060208284031215610126576101256100ad565b5b6000610134848285016100fb565b91505092915050565b608051610d1e61015f600039600081816101e901526103f50152610d1e6000f3fe6080604052600436106100705760003560e01c8063893d20e81161004e578063893d20e8146100f45780639e87a5cd1461011f578063b60d42881461014a578063d7b4750c1461015457610070565b80630343fb25146100755780633430a88c146100b25780633ccfd60b146100dd575b600080fd5b34801561008157600080fd5b5061009c6004803603810190610097919061079c565b610191565b6040516100a991906107e2565b60405180910390f35b3480156100be57600080fd5b506100c76101da565b6040516100d491906107e2565b60405180910390f35b3480156100e957600080fd5b506100f26101e7565b005b34801561010057600080fd5b506101096103f1565b604051610116919061080c565b60405180910390f35b34801561012b57600080fd5b50610134610419565b6040516101419190610886565b60405180910390f35b610152610443565b005b34801561016057600080fd5b5061017b600480360381019061017691906108cd565b61057e565b604051610188919061080c565b60405180910390f35b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461026c576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600080549050811115610317576000808281548110610291576102906108fa565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061030f90610958565b91505061026f565b50600067ffffffffffffffff811115610333576103326109a0565b5b6040519080825280602002602001820160405280156103615781602001602082028036833780820191505090505b5060009080519060200190610377929190610692565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161039e90610a00565b60006040518083038185875af1925050503d80600081146103db576040519150601f19603f3d011682016040523d82523d6000602084013e6103e0565b606091505b50509050806103ee57600080fd5b50565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b1880000610482600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105c590919063ffffffff16565b10156104c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ba90610a72565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105129190610a92565b925050819055506000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000808281548110610593576105926108fa565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806105d183610601565b90506000670de0b6b3a764000085836105ea9190610ac6565b6105f49190610b37565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561064f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106739190610bf5565b5050509150506402540be4008161068a9190610c70565b915050919050565b82805482825590600052602060002090810192821561070b579160200282015b8281111561070a5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106b2565b5b509050610718919061071c565b5090565b5b8082111561073557600081600090555060010161071d565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107698261073e565b9050919050565b6107798161075e565b811461078457600080fd5b50565b60008135905061079681610770565b92915050565b6000602082840312156107b2576107b1610739565b5b60006107c084828501610787565b91505092915050565b6000819050919050565b6107dc816107c9565b82525050565b60006020820190506107f760008301846107d3565b92915050565b6108068161075e565b82525050565b600060208201905061082160008301846107fd565b92915050565b6000819050919050565b600061084c6108476108428461073e565b610827565b61073e565b9050919050565b600061085e82610831565b9050919050565b600061087082610853565b9050919050565b61088081610865565b82525050565b600060208201905061089b6000830184610877565b92915050565b6108aa816107c9565b81146108b557600080fd5b50565b6000813590506108c7816108a1565b92915050565b6000602082840312156108e3576108e2610739565b5b60006108f1848285016108b8565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610963826107c9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361099557610994610929565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b60006109ea6000836109cf565b91506109f5826109da565b600082019050919050565b6000610a0b826109dd565b9150819050919050565b600082825260208201905092915050565b7f457468206e6f7420656e6f75676820746f2073656e6400000000000000000000600082015250565b6000610a5c601683610a15565b9150610a6782610a26565b602082019050919050565b60006020820190508181036000830152610a8b81610a4f565b9050919050565b6000610a9d826107c9565b9150610aa8836107c9565b9250828201905080821115610ac057610abf610929565b5b92915050565b6000610ad1826107c9565b9150610adc836107c9565b9250828202610aea816107c9565b91508282048414831517610b0157610b00610929565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b42826107c9565b9150610b4d836107c9565b925082610b5d57610b5c610b08565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610b8781610b68565b8114610b9257600080fd5b50565b600081519050610ba481610b7e565b92915050565b6000819050919050565b610bbd81610baa565b8114610bc857600080fd5b50565b600081519050610bda81610bb4565b92915050565b600081519050610bef816108a1565b92915050565b600080600080600060a08688031215610c1157610c10610739565b5b6000610c1f88828901610b95565b9550506020610c3088828901610bcb565b9450506040610c4188828901610be0565b9350506060610c5288828901610be0565b9250506080610c6388828901610b95565b9150509295509295909350565b6000610c7b82610baa565b9150610c8683610baa565b9250828202610c9481610baa565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610ccc57610ccb610929565b5b8282058414831517610ce157610ce0610929565b5b509291505056fea2646970667358221220f5c77c312a4cd4e8643b7209410be0e8da0f87a6876d81f3994510c988bac13364736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106100705760003560e01c8063893d20e81161004e578063893d20e8146100f45780639e87a5cd1461011f578063b60d42881461014a578063d7b4750c1461015457610070565b80630343fb25146100755780633430a88c146100b25780633ccfd60b146100dd575b600080fd5b34801561008157600080fd5b5061009c6004803603810190610097919061079c565b610191565b6040516100a991906107e2565b60405180910390f35b3480156100be57600080fd5b506100c76101da565b6040516100d491906107e2565b60405180910390f35b3480156100e957600080fd5b506100f26101e7565b005b34801561010057600080fd5b506101096103f1565b604051610116919061080c565b60405180910390f35b34801561012b57600080fd5b50610134610419565b6040516101419190610886565b60405180910390f35b610152610443565b005b34801561016057600080fd5b5061017b600480360381019061017691906108cd565b61057e565b604051610188919061080c565b60405180910390f35b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461026c576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600080549050811115610317576000808281548110610291576102906108fa565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061030f90610958565b91505061026f565b50600067ffffffffffffffff811115610333576103326109a0565b5b6040519080825280602002602001820160405280156103615781602001602082028036833780820191505090505b5060009080519060200190610377929190610692565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161039e90610a00565b60006040518083038185875af1925050503d80600081146103db576040519150601f19603f3d011682016040523d82523d6000602084013e6103e0565b606091505b50509050806103ee57600080fd5b50565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b1880000610482600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105c590919063ffffffff16565b10156104c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ba90610a72565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105129190610a92565b925050819055506000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000808281548110610593576105926108fa565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806105d183610601565b90506000670de0b6b3a764000085836105ea9190610ac6565b6105f49190610b37565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561064f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106739190610bf5565b5050509150506402540be4008161068a9190610c70565b915050919050565b82805482825590600052602060002090810192821561070b579160200282015b8281111561070a5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106b2565b5b509050610718919061071c565b5090565b5b8082111561073557600081600090555060010161071d565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107698261073e565b9050919050565b6107798161075e565b811461078457600080fd5b50565b60008135905061079681610770565b92915050565b6000602082840312156107b2576107b1610739565b5b60006107c084828501610787565b91505092915050565b6000819050919050565b6107dc816107c9565b82525050565b60006020820190506107f760008301846107d3565b92915050565b6108068161075e565b82525050565b600060208201905061082160008301846107fd565b92915050565b6000819050919050565b600061084c6108476108428461073e565b610827565b61073e565b9050919050565b600061085e82610831565b9050919050565b600061087082610853565b9050919050565b61088081610865565b82525050565b600060208201905061089b6000830184610877565b92915050565b6108aa816107c9565b81146108b557600080fd5b50565b6000813590506108c7816108a1565b92915050565b6000602082840312156108e3576108e2610739565b5b60006108f1848285016108b8565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610963826107c9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361099557610994610929565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b60006109ea6000836109cf565b91506109f5826109da565b600082019050919050565b6000610a0b826109dd565b9150819050919050565b600082825260208201905092915050565b7f457468206e6f7420656e6f75676820746f2073656e6400000000000000000000600082015250565b6000610a5c601683610a15565b9150610a6782610a26565b602082019050919050565b60006020820190508181036000830152610a8b81610a4f565b9050919050565b6000610a9d826107c9565b9150610aa8836107c9565b9250828201905080821115610ac057610abf610929565b5b92915050565b6000610ad1826107c9565b9150610adc836107c9565b9250828202610aea816107c9565b91508282048414831517610b0157610b00610929565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b42826107c9565b9150610b4d836107c9565b925082610b5d57610b5c610b08565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610b8781610b68565b8114610b9257600080fd5b50565b600081519050610ba481610b7e565b92915050565b6000819050919050565b610bbd81610baa565b8114610bc857600080fd5b50565b600081519050610bda81610bb4565b92915050565b600081519050610bef816108a1565b92915050565b600080600080600060a08688031215610c1157610c10610739565b5b6000610c1f88828901610b95565b9550506020610c3088828901610bcb565b9450506040610c4188828901610be0565b9350506060610c5288828901610be0565b9250506080610c6388828901610b95565b9150509295509295909350565b6000610c7b82610baa565b9150610c8683610baa565b9250828202610c9481610baa565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610ccc57610ccb610929565b5b8282058414831517610ce157610ce0610929565b5b509291505056fea2646970667358221220f5c77c312a4cd4e8643b7209410be0e8da0f87a6876d81f3994510c988bac13364736f6c63430008110033",
  "devdoc": {
    "author": "DEV Sumon",
    "details": "this implements price feeds our library",
    "kind": "dev",
    "methods": {},
    "title": "A contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "this contract is demo a simple funding contract ",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 66,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "fundersArray",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 70,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmount",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 73,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}